ggplot() + geom_sf(data=data, color= "blue", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") + theme_minimal()
}
map_shape_bg(read_shape_bg())
ggplot() + geom_sf(data=data, color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") + theme_minimal()
map_shape_bg(read_shape_bg())
map_shape_bg <- function(data){
ggplot() + geom_sf(data=data, color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") + theme_minimal()
}
map_shape_bg(read_shape_bg())
runApp('Documentos/Projetos/geoinfobage/R')
runApp('Documentos/Projetos/geoinfobage/R')
ggplot() +
geom_rect(fill = "purple", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, alpha = 0.5) +
geom_sf(data=data, color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") + theme_minimal()
map_shape_bg <- function(data){
ggplot() +
geom_rect(fill = "purple", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, alpha = 0.5) +
geom_sf(data=data, color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") + theme_minimal()
}
map_shape_bg(read_shape_bg())
ggplot() +
geom_rect(fill = "purple", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, alpha = 0.5) +
geom_sf(data=data, color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") + theme_minimal()
map_shape_bg <- function(data){
ggplot() +
geom_rect(fill = "purple", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, alpha = 0.5) +
geom_sf(data=data, color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") + theme_minimal()
}
map_shape_bg(read_shape_bg())
ggplot() +
geom_rect(fill = "red", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, alpha = 0.5) +
geom_sf(data=data, color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") + theme_minimal()
map_shape_bg <- function(data){
ggplot() +
geom_rect(fill = "red", xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf, alpha = 0.5) +
geom_sf(data=data, color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") + theme_minimal()
}
map_shape_bg(read_shape_bg())
img <- readPNG("./www/shape_bg.png")
library(png)
img <- readPNG("./www/shape_bg.png")
img <- readPNG("shape_bg.png")
img <- readPNG("shape_bg.png")
bg_imaga <- readPNG("shape_bg.png")
bg_imaga <- readPNG("https://github.com/EduardoMoreaes/geoinfobage/blob/main/R/www/shape_bg?raw=true")
bg_imaga <- readPNG("https://github.com/EduardoMoreaes/geoinfobage/raw/main/R/www/shape_bg")
bg_imaga <- readPNG("shape_bg.png")
bg_imaga <- readPNG("../www/shape_bg.png")
bg_imaga <- readPNG("./www/shape_bg.png")
bg_imaga <- readPNG("./shape_bg.png")
bg_imaga <- readPNG("./shape_bg.png")
bg_imaga <- readPNG("shape_bg.png")
bg_imaga <- readPNG("bage")
bg_imaga <- readPNG("bage.PNG")
install.packages("png")
install.packages("png")
library(png)
bg_imaga <- readPNG("bage.PNG")
install.packages("png")
install.packages("png")
library(png)
bg_imaga <- readPNG("bage.PNG")
bg_imaga <- readPNG("bage.png")
bg_imaga <- readPNG("https://github.com/EduardoMoreaes/geoinfobage/blob/main/logobage.png?raw=true")
bg_imaga <- readPNG("https://github.com/EduardoMoreaes/geoinfobage/blob/main/logobage.png")
bg_imaga <- readPNG("https://github.com/EduardoMoreaes/geoinfobage/blob/main/logobage.png")
readPNG("bage.png")
readPNG("aaa.png")
library(jpeg)
readJPEG("aaa.png")
readJPEG("aaa.jpeg")
readPNG("bage.png")
library(png)
readPNG("bage.png")
readPNG("https://github.com/GeoInformacao/geoinfobage/blob/main/logobage.png?raw=true")
pacotes <- list("devtools", "geobage", "shiny","shinydashboard", "dplyr", "ggplot2")
for(i in seq_along(pacotes)){
pacote <- pacotes[[i]]
if (pacote %in% installed.packages()) {
print(paste("Pacote instalado...", pacote))
print(paste("Carregando...", pacote))
library(pacote,  character.only = TRUE)
}
else if(pacote == "geobage"){
print(paste("Instalando", pacote, "..."))
devtools::install_github("GeoInformacao/geobage")
}
else {
print(paste("Instalando", pacote, "..."))
install.packages(pacote)
}
}
map_shape_bg <- function(data){
ggplot() +
geom_sf(data=read_shape_bg(), color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()
}
map_shape_bg()
aerodromes <- map_shape_bg(read_aerodromes_bg())
aerodromes
ggplot() +
geom_sf(data=read_shape_bg(), color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()+
geom_sf(data=data, color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()
map_shape_bg <- function(data){
ggplot() +
geom_sf(data=read_shape_bg(), color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()+
geom_sf(data=data, color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()
}
map_shape_bg()
aerodromes <- map_shape_bg(read_aerodromes_bg())
aerodromes
allotments <- map_shape_bg(read_allotments_bg())
allotments
biome <- map_shape_bg(read_biome_pampa_bg())
biome
census_tract <- map_shape_bg(read_census_tract_bg())
census_tract
biome <- map_shape_bg(read_biome_pampa_bg())
biome
map_shape_bg()
aerodromes
biome <- map_shape_bg(read_biome_pampa_bg())
biome
census_tract
iphan_listed_properties <- map_shape_bg(read_compreb_bg())
iphan_listed_properties
conservation_unit <- map_shape_bg(read_conservation_unit_bg())
conservation_unit
conservation_unit <- map_shape_bg(read_conservation_unit_bg())
read_conservation_unit_bg()
conservation_unit <- map_shape_bg(read_conservation_unit_bg())
dams_in_the_municipality <- map_shape_bg(read_dam_bg())
districts_of_bage <- map_shape_bg(read_districts_bg())
drainage_mass_stretch <- map_shape_bg(read_drainage_mass_stretch_bg())
drainage_stretch <- map_shape_bg(read_drainage_stretch_bg())
environmental_sensitivity <- map_shape_bg(read_environmental_sensitivity_bg())
geology <- map_shape_bg(read_geology_bg())
geomorphology <- map_shape_bg(read_geomorphology_bg())
hydro-stratified_unit <- map_shape_bg(read_hydro_stratified_unit_bg())
hydro-stratified_unit <- map_shape_bg(read_hydro_stratified_unit_bg())
#hydro-stratified_unit <- map_shape_bg(read_hydro_stratified_unit_bg())
hydrogeology <- map_shape_bg(read_hydrogeology_bg())
#hydro-stratified_unit <- map_shape_bg(read_hydro_stratified_unit_bg())
hydrogeology <- map_shape_bg(read_hydrogeology_bg())
geomorphology <- map_shape_bg(read_geomorphology_bg())
conservation_unit <- map_shape_bg(read_conservation_unit_bg())
#conservation_unit <- map_shape_bg(read_conservation_unit_bg())
conservation_unit
#conservation_unit <- map_shape_bg(read_conservation_unit_bg())
dams_in_the_municipality <- map_shape_bg(read_dam_bg())
districts_of_bage <- map_shape_bg(read_districts_bg())
drainage_mass_stretch <- map_shape_bg(read_drainage_mass_stretch_bg())
drainage_stretch <- map_shape_bg(read_drainage_stretch_bg())
environmental_sensitivity <- map_shape_bg(read_environmental_sensitivity_bg())
geology <- map_shape_bg(read_geology_bg())
#geomorphology <- map_shape_bg(read_geomorphology_bg())
#hydro-stratified_unit <- map_shape_bg(read_hydro_stratified_unit_bg())
hydrogeology <- map_shape_bg(read_hydrogeology_bg())
hydrography <- map_shape_bg(read_hydrography_bg())
health_facilitie <- map_shape_bg(read_health_facilities_bg())
immediate_region <- map_shape_bg(read_immediate_region_bg())
information_about_the_municipality_of_bage <- map_shape_bg(read_information_about_the_municipality_of_bage_bg())
#information_about_the_municipality_of_bage <- map_shape_bg(read_information_about_the_municipality_of_bage_bg())
intermediate_region <- map_shape_bg(read_intermediate_region_bg())
land_use <- map_shape_bg(read_land_use_bg())
legal_reserve <- map_shape_bg(read_legal_reserve_bg())
#legal_reserve <- map_shape_bg(read_legal_reserve_bg())
level_curve <- map_shape_bg(read_level_curve_bg())
macro_urban_areas <- map_shape_bg(read_macro_urban_areas_bg())
bodies_of_water <- map_shape_bg(read_mass_water_bg())
meso_region <- map_shape_bg(read_meso_region_bg())
micro_region <- map_shape_bg(read_micro_region_bg())
milk_production <- map_shape_bg(read_milk_production_bg())
municipality_seat <- map_shape_bg(read_municipal_seat_bg())
paleontology <- map_shape_bg(read_paleontology_bg())
park_gaucho <- map_shape_bg(read_park_gaucho_bg())
paved_highways <- map_shape_bg(read_paved_highways_bg())
pedology <- map_shape_bg(read_pedology_bg())
public_buildings <- map_shape_bg(read_public_buildings_bg())
public_rural_properties <- map_shape_bg(read_public_rural_properties_bg())
#public_rural_properties <- map_shape_bg(read_public_rural_properties_bg())
rail_lines <- map_shape_bg(read_railways_bg())
rural_lots <- map_shape_bg(read_rural_lots_bg())
rural_roads <- map_shape_bg(read_rural_roads_bg())
sand_banks <- map_shape_bg(read_sand_banks_bg())
soil_exploration <- map_shape_bg(read_soil_exploration_bg())
soil_types <- map_shape_bg(read_soil_types_bg())
transmission_lines <- map_shape_bg(read_transmission_lines_bg())
springs <- map_shape_bg(read_springs_bg())
unpaved_highways <- map_shape_bg(read_unpaved_highways_bg())
urban_footprint <- map_shape_bg(read_urban_area_bg())
use_ground_cover <- map_shape_bg(read_use_ground_cover_bg())
vegetation <- map_shape_bg(read_vegetation_bg())
View(census_tract)
macro_urban_areas
map_shape_bg()
map_shape_bg <- function(data){
ggplot() +
geom_sf(data=read_shape_bg(), color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()+
geom_sf(data=data, color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()
}
map_shape_bg()
map_shape_bg(read_shape_bg())
allotments <- map_shape_bg(read_allotments_bg())
bathed <- map_shape_bg(read_bathed_bg())
biome <- map_shape_bg(read_biome_pampa_bg())
biome
census_tract <- map_shape_bg(read_census_tract_bg())
census_tract
map_shape_bg <- function(data, title, font){
ggplot() +
geom_sf(data=read_shape_bg(), color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()+
geom_sf(data=data, color="blue", size=.15) +
labs(title=title, caption=font,  size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()
}
map_shape_bg(read_shape_bg())
aerodromes <- map_shape_bg(read_aerodromes_bg(), "Aerodromes", "Fonte: IBGE")
ggplot() +
geom_sf(data=read_shape_bg(), color= "black", size=.15) +
labs(title="Municipio de Bagé:"+title, caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()+
geom_sf(data=data, color="blue", size=.15) +
labs(title=title, caption=font,  size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()
map_shape_bg <- function(data, title, font){
ggplot() +
geom_sf(data=read_shape_bg(), color= "black", size=.15) +
labs(title=title, caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()+
geom_sf(data=data, color="blue", size=.15) +
labs(title=title, caption=font,  size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()
}
map_shape_bg(read_shape_bg())
aerodromes <- map_shape_bg(read_aerodromes_bg(), "Aerodromes", "Fonte: IBGE")
aerodromes
aerodromes <- map_shape_bg(read_aerodromes_bg(), "Aerodromes", "Fonte: ANA")
aerodromes
ggplot() +
geom_sf(data=read_shape_bg(), color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()+
geom_sf(data=data, color="blue", size=.15) +
labs(title=title, caption=font,  size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()
map_shape_bg <- function(data, title, font){
ggplot() +
geom_sf(data=read_shape_bg(), color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()+
geom_sf(data=data, color="blue", size=.15) +
labs(title=title, caption=font,  size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()
}
map_shape_bg(read_shape_bg())
aerodromes <- map_shape_bg(read_aerodromes_bg(), "Aerodromes", "Fonte: ANA")
aerodromes
allotments <- map_shape_bg(read_allotments_bg(), "Allotments", "Fonte: CAR")
allotments
biome <- map_shape_bg(read_biome_pampa_bg(), "Bioma", "Fonte: IBGE")
biome
runApp('Documentos/Projetos/geoinfobage/R')
runApp('Documentos/Projetos/geoinfobage/R')
runApp('Documentos/Projetos/geoinfobage/R')
runApp('Documentos/Projetos/geoinfobage/R')
runApp('Documentos/Projetos/geoinfobage/R')
runApp('Documentos/Projetos/geoinfobage/R')
runApp('Documentos/Projetos/geoinfobage/R')
bathed
View(bathed)
bathed@data
bathed$data
bathed$data$NUM_AREA
bathed$data
bathed$scales
bathed$plot_env$data
bathed$labels$caption
runApp('Documentos/Projetos/geoinfobage/R')
View(census_tract)
runApp('Documentos/Projetos/geoinfobage/R')
objeto<-read_aerodromes_bg()
View(objeto)
renderPlot(map_shape_bg(objeto,
objeto$MUNIC.PI, "Fonte: ANAC"))
output$meu_mapa <- renderPlot(map_shape_bg(objeto,
objeto$MUNIC.PI, "Fonte: ANAC"))},
runApp('Documentos/Projetos/geoinfobage/R')
objeto <- read_aerodromes_bg()
runApp('Documentos/Projetos/geoinfobage/R')
objeto <- read_aerodromes_bg()
map_shape_bg(objeto <- read_aerodromes_bg(),
"Aerodórmes", "Fonte: ANAC", objeto$LARGURA))
map_shape_bg <- function(data, title, font, info){
ggplot() +
geom_sf(data=read_shape_bg(), color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()+
geom_sf(data=data, color="blue", aes(fill=info), size=.15) +
labs(title=title, caption=font,  size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()
}
map_shape_bg(objeto <- read_aerodromes_bg(),
"Aerodórmes", "Fonte: ANAC", objeto$LARGURA))
runApp('Documentos/Projetos/geoinfobage/R')
objeto <- read_allotments_bg()
objeto <- read_bathed_bg()
map_shape_bg <- function(data, title, font, info){
ggplot() +
geom_sf(data=read_shape_bg(), color= "black", size=.15) +
labs(title="Municipio de Bagé", caption='Fonte: IBGE', size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()+
geom_sf(data=data, color="blue", aes(fill=info), size=.15) +
labs(title=title, caption=font,  size=8)+
scale_fill_distiller(palette = "Greens", limits=c(0.5, 0.8), name="Code_muni") +
theme_minimal()
}
map_shape_bg(objeto <- read_bathed_bg(),
"Banhado", "Fonte: ANAC", objeto$NUM_AREA))
map_shape_bg(objeto <- read_bathed_bg(),
"Banhado", "Fonte: ANAC", objeto$NUM_AREA)
map_shape_bg(objeto <- read_allotments_bg(),
"Loteamentos", "Fonte: CAR", objeto$nome)
objeto <- read_allotments_bg(),
map_shape_bg(objeto <- read_allotments_bg(),
"Loteamentos", "Fonte: CAR", objeto$orientacao)
map_shape_bg(objeto <- read_allotments_bg(),
"Loteamentos", "Fonte: CAR", objeto$local)
runApp('Documentos/Projetos/geoinfobage/R')
runApp('Documentos/Projetos/geoinfobage/R')
shiny::runApp('Documentos/Projetos/geoinfobage/R')
install.packages("mapview")
library(mapview)
install.packages("leafpm")
library(leafpm)
map <- map_shape_bg(data <- read_shape_bg(), data$name_muni)
mapshot(map, "map.png")
save_map(map, "map.png")
install.packages("leaflet.extras")
library(leaflet.extras)
mapshot(map, "map.png")
install.packages("leaflet.extras2")
library(leaflet.extras2)
mapshot(map, "map.png")
library(devtools)
install_github("wch/webshot")
library(webshot)
library(htmlwidgets)
## create map
m <- leaflet() %>% addTiles()
## save html to png
saveWidget(m, "temp.html", selfcontained = FALSE)
webshot("temp.html", file = "Rplot.png",
cliprect = "viewport")
## save html to png
saveWidget(m, "temp.html", selfcontained = FALSE)
library(htmlwidgets)
library(webshot)
## create map
m <- leaflet() %>% addTiles()
View(m)
## save html to png
saveWidget(m, "temp.html", selfcontained = FALSE)
webshot("temp.html", file = "Rplot.png",
cliprect = "viewport")
## save html to png
saveWidget(m, "temp.html", selfcontained = T)
webshot("temp.html", file = "Rplot.png",
cliprect = "viewport")
library(mapview)
install.packages("mapview". dependencies=T)
install.packages("mapview", dependencies=T)
library(mapview)
library(devtools)
install_github("wch/webshot")
library(htmlwidgets)
library(webshot)
## create map
m <- leaflet() %>% addTiles()
## save html to png
saveWidget(m, "temp.html", selfcontained = F)
## save html to png
saveWidget(m, "a.html", selfcontained = F)
m
## save html to png
saveWidget(m, "a.html", selfcontained = F)
## save html to png
saveWidget(m, "a.html", selfcontained = F)
webshot("a.html", file = "Rplot.png",
cliprect = "viewport")
webshot(m, "a.html", file = "Rplot.png")
webshot(m, "a.html", file = "Rplot.png")
webshot(map, "a.html", file = "Rplot.png")
webshot("a.html", file = "Rplot.png")
library(webshot)
install.packages(webshot)
webshot(file="webshot.png")
webshot(url="~/a.html", file="webshot.png")
webshot(url="a.html", file="webshot.png")
webshot(url="http://wch.github.io/webshot/reference/webshot.html", file="webshot.png")
install.packages("leaflet.print")
library(leaflet.extras2)
m <- leaflet()%>% addTiles()
easyprintMap(m, filename = "map")
easyprintMap(m, filename = "map.png")
easyprintMap(m)
easyprintMap(m, title="Mapa", filename = "mapAAAA.png")
easyprintMap(m, filename = "mapAAAA.png")
save.image(m)
save.image(m, file="map.png")
save.image("a.png")
leaflet.extras2::addEasyprint(m)
leaflet.extras2::addEasyprint(m)
leaflet.extras2::addEasyprint(m, filename="mapa.png
")
leaflet.extras2::addEasyprint(m, filename="mapa.png")
leaflet.extras2::addEasyprint()
leaflet.extras2::addEasyprint(m)
runApp('Documentos/Projetos/geoinfobage/R')
library(leaflet.extras)
filename = function() {
paste("mapa-", Sys.Date(), ".png", sep="")
},
filename = function() {
paste("mapa-", Sys.Date(), ".png", sep="")
}
content = function(file) {
mapshot(leafletProxy("map"), file = file, format = "png")
}
runApp('Documentos/Projetos/geoinfobage/R')
runApp('Documentos/Projetos/geoinfobage/R')
install.packages("webshot")
webshot::install_phantomjs()
install.packages("webshot")
install.packages("webshot")
webshot::install_phantomjs()
shiny::runApp('Documentos/Projetos/geoinfobage/R')
runApp('Documentos/Projetos/geoinfobage/R')
webshot("a.html")
library(webshot)
webshot("https://www.r-project.org/", "r.png")
webshot("https://www.r-project.org/", "r.pdf") # Can also output to PDF
webshot("https://www.r-project.org/", "r-viewport.png", cliprect = "viewport")
webshot("https://www.r-project.org/", "r-sidebar-zoom.png",
selector = ".sidebar", zoom = 2)
# Can specify pixel dimensions for resize()
webshot("https://www.r-project.org/", "r-small.png") %>%
resize("400x") %>%
shrink()
print(paste("Instalando", pacote, "..."))
install.packages("webshot")
install.packages("webshot")
webshot::install_phantomjs()
webshot::install_phantomjs()
webshot::install_phantomjs()
webshot::install_phantomjs()
webshot::is_phantomjs_installed()
shiny::runApp('Documentos/Projetos/geoinfobage/R')
shiny::runApp('Documentos/Projetos/geoinfobage/R')
